%%
%%   This file contains the settings for the project
%%   You should make a copy of tracerays_settings.m.template as tracerays_settings.m and make your changes there
%%
%'forward'
%'backward'
direction = 'backward';
sync = true;

switch direction
    case 'forward'
        %must make vis_prop = 0
        useParfor = false;
        strength = 50;
        diff_upsample = 0;
        vis = 0;
        vis_prop = 0;
        save_prop = 0;
        vis_sensor = 0;
        %Range and step size for propagation movie
        zmax = 1000;
        zstep = 10;
        %Setup tracing grid
        %number of Y points use 1 for 1d case
        M = 1;
        % number of X points
        N = 3;
        %number of phi points (angle in y (M) direction)   use 1 for 1d
        P = 1;
        %number of theta points (angle in x direction)
        Q = 3;
        nrays = 555;
        %how far along x to go in same units as pixels (micron)
        x_range = 100;
        %This will be divided into N steps
        %in M steps. Use 0 for 1d.
        y_range = 0;
        %Setup sensor parameters for a sensor that is the same size as the diffuser
        npx =10;
        %for 1d use 1
        npy = 1;
        %z0 = 228.6
        z0 = 100;
        %how far in angle to go in degrees
        %Divided into P steps.
        ph_range = 0;
        th_range = 8;
        % first index of refraction
        indexEnv = 1;
        %second index of refraction
        indexDiff = 1.5;
        if sync
            pixelSize = x_range ./ npx; %pixel size in physical units
            sensorSizeX = npx; %given in pixels
            sensorSizeY = 0;
            %2.5 is for strength 50
            thetaSpread = th_range + 2.5; %in degrees
            phiSpread = 0;
            rays = nrays * (M*N*P*Q);
            
            %distance to diffuser
            z = z0;
            
            %diffuser strength
            strengthB = -strength;
            gridX = N;
            gridT = Q;
            xRange = [0 x_range];
            tRange = [(th_range ./ 2) (-th_range ./ 2)];
        end
    case 'backward'
        pixelSize = 10; %pixel size in physical units
        sensorSizeX = 10; %given in pixels
        sensorSizeY = 0;
        thetaSpread = 5; %in degrees
        phiSpread = 0;
        rays = 5000;
        
        %distance to diffuser
        z = 100;
        %diffuser strength
        strengthB = -50;
        %second index of refraction
        indexEnv = 1;
        
        %first index of refraction
        indexDiff = 1.5;
        
        gridX = 3;
        gridT = 3;
        xRange = [0 100];
        tRange = [4 -4];
        if sync
            %must make vis_prop = 0
            useParfor = false;
            strength = -strengthB;
            diff_upsample = 0;
            vis = 0;
            vis_prop = 0;
            save_prop = 0;
            vis_sensor = 0;
            %Range and step size for propagation movie
            zmax = 1000;
            zstep = 10;
            %Setup tracing grid
            %number of Y points use 1 for 1d case
            M = 1;
            % number of X points
            N = gridX;
            %number of phi points (angle in y (M) direction)   use 1 for 1d
            P = 1;
            %number of theta points (angle in x direction)
            Q = gridT;
            nrays = round(rays ./ (N*M*P*Q));
            %how far along x to go in same units as pixels (micron)
            x_range = pixelSize * sensorSizeX;
            %This will be divided into N steps
            %in M steps. Use 0 for 1d.
            y_range = 0;
            %Setup sensor parameters for a sensor that is the same size as the diffuser
            npx = sensorSizeX;
            %for 1d use 1
            npy = 1;
            %z0 = 228.6
            z0 = z;
            %how far in angle to go in degrees
            %Divided into P steps.
            ph_range = 0;
            th_range = 2 * tRange(1);
        end
end
